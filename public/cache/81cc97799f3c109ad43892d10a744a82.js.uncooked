
  CTNS.QUIZ_SET["81cc97799f3c109ad43892d10a744a82"] = function (PYTHON_ID) {
  
  /* SAMPLE: MASTERID */
  /* SAMPLE: GENERIC_MARKER */
  /* Unfortunately, I must key my Javascript off of the incoming
   * value of PYTHON_ID, not off the FACTORYID that comes through
   * PHP.
   */
  CTNS_ID                       = 'ctns_GENERIC_MARKER';
  
  var ctns_marker = ctns_marker || {};
  ctns_marker.quiz = "CTNS technical details on a quiz table:";

  (function(CTNS, myRWU_factoryid, questions_meta, questions) {
	
	var slides,
	    do_quiz = CTNS.QUIZ.do_quiz,
	    do_katex = CTNS.PROBLEMS.do_katex,
	    do_matex = CTNS.PROBLEMS.do_matex,
	    do_force = CTNS.PROBLEMS.do_force,
	    do_center = CTNS.PROBLEMS.do_center;
	    
	slides = do_quiz(CTNS, questions, myRWU_factoryid, 'GENERIC_MARKER', 18);
	
    jQuery(slides).each(function(idx, ele) {
        jQuery(ele).addClass('slide-'+idx);
    });
    
    /*
    if ( questions_meta.shuffleSlides ) {
        var newSlides = jQuery(slides).shuffle();
    }
    */
    
    /* This process could be a bug ... check out shuffle later
     */
    var newSlides = slides;
                
    if ( questions_meta.showDivide ) {
       
        jQuery(newSlides).removeClass('ctns-hide').after('<hr class="ctns-one-page"/>');

    } else {
    
        jQuery(newSlides).removeClass('ctns-hide');

    }

	do_katex();
	do_matex();

	jQuery(".slide_GENERIC_MARKER").each( function() {do_center(this)} );

    do_force('GENERIC_MARKER');
    
  })(CTNS, 
     "", 
     CTNS.QUESTIONS_META[CTNS_ID] = {
         count:         18,
         shuffleSlides: false,
         showDivide:    true,
     }, 
     CTNS.QUESTIONS[CTNS_ID] = [
{
    slideNo: 0,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ1-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  Addition for natural numbers is associative for any three natural numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c,'></div> <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>     ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for natural numbers under addition, which says for three natural numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of addition using parentheses and still get the same sum, <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>Try this property for yourself using three arbitrary natural numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for natural numbers under addition, which says for three natural numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of addition using parentheses and still get the same sum, <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>Try this property for yourself using three arbitrary natural numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " Addition is associative for the set of natural numbers.     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 1,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ1-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  Addition for integers is associative for any three integers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c,'></div> <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>     ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for integers under addition, which says for three integers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of addition using parentheses and still get the same sum, <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>Try this property for yourself using three arbitrary integers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for integers under addition, which says for three integers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of addition using parentheses and still get the same sum, <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>Try this property for yourself using three arbitrary integers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " Addition is associative for the set of integers.     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 2,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ1-3",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  Addition for real numbers is associative for any three real numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c,'></div> <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>     ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for real numbers under addition, which says for three real numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of addition using parentheses and still get the same sum, <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>Try this property for yourself using three arbitrary real numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for real numbers under addition, which says for three real numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of addition using parentheses and still get the same sum, <div class='tex ctns-center' data-expr='(a + b) + c = a + (b + c).'></div>Try this property for yourself using three arbitrary real numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " Addition is associative for the set of real numbers.     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 3,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ2-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 4,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ2-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 5,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ2-3",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 6,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ3-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 7,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ3-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 8,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ3-3",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 9,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ4-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  Multiplication for natural numbers is associative for any three natural numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c,'></div> <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>     ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for natural numbers under multiplication, which says for three natural numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of multiplication using parentheses and still get the same product, <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>Try this property for yourself using three arbitrary natural numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for natural numbers under multiplication, which says for three natural numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of multiplication using parentheses and still get the same product, <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>Try this property for yourself using three arbitrary natural numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " Multiplication is associative for the set of natural numbers.     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 10,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ4-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  Multiplication for integers is associative for any three integers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c,'></div> <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>     ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for integers under multiplication, which says for three integers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of multiplication using parentheses and still get the same product, <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>Try this property for yourself using three arbitrary integers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for integers under multiplication, which says for three integers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of multiplication using parentheses and still get the same product, <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>Try this property for yourself using three arbitrary integers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " Multiplication is associative for the set of integers.     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 11,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ4-3",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  Multiplication for real numbers is associative for any three real numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c,'></div> <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>     ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for real numbers under multiplication, which says for three real numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of multiplication using parentheses and still get the same product, <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>Try this property for yourself using three arbitrary real numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  To answer this question you must first know the <strong>property of associativity</strong> for real numbers under multiplication, which says for three real numbers <div class='tex' data-expr='a,'></div> <div class='tex' data-expr='b,'></div> and <div class='tex' data-expr='c'></div> you can change the order of multiplication using parentheses and still get the same product, <div class='tex ctns-center' data-expr='(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).'></div>Try this property for yourself using three arbitrary real numbers <div class='tex' data-expr='a'></div>, <div class='tex' data-expr='b'></div>, and <div class='tex' data-expr='c'></div>.     "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " Multiplication is associative for the set of real numbers.     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 12,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ5-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 13,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ5-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 14,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ5-3",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 15,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ6-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 16,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ6-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 17,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "axAssocQ6-3",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div>     ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "width:70%;margin-left:auto;margin-right:auto;",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
]);
/* This values are set only once for any particular
 * quiz container.
 */
CTNS.NUMBERS.GID = 'quiz_GENERIC_MARKER';
CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'] = [];
CTNS.NUMBERS.symbols['quiz_GENERIC_MARKER'] = CTNS.NUMBERS.symbols['quiz_GENERIC_MARKER'] || {};

/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_0'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_0'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_0',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_0',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_0',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_0',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_0',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_0',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_0',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_0',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_0',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_0',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_0',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_0',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_0',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_0',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_0   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_0   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_0 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_0 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_0 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_0 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_0 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_0 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_0 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_0'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];         /* See Make.php for this dummy entry. A custom script will override this entry. */             [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_1'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_1'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_1',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_1',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_1',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_1',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_1',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_1',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_1',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_1',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_1',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_1',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_1',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_1',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_1',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_1',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_1   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_1   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_1 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_1 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_1 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_1 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_1 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_1 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_1 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_1'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];         /* See Make.php for this dummy entry. A custom script will override this entry. */             [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_2'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_2'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_2',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_2',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_2',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_2',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_2',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_2',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_2',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_2',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_2',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_2',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_2',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_2',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_2',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_2',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_2   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_2   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_2 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_2 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_2 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_2 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_2 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_2 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_2 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_2'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];         /* See Make.php for this dummy entry. A custom script will override this entry. */             [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_3'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_3'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_3',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_3',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_3',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_3',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_3',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_3',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_3',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_3',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_3',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_3',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_3',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_3',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_3',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_3',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_3   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_3   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_3 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_3 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_3 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_3 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_3 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_3 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_3 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_3'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var associativity = [             "(%s + %s) + %s = %s + (%s + %s)"             ];          var iterations = 10;         do {             a = natural();             b = natural();             c = natural();         } while (is_gt(iterations--, 0) && ((a === b) || (b === c) || (a === c)));          symbols.eq = associativity.ctns_rand().ctns_format( [String(a), String(b), String(c), String(a), String(b), String(c)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that addition for natural numbers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Addition for natural numbers is associative for any three natural numbers $$a,$$ $$b,$$ and $$c,$$ $|(a+b)+c = a+(b+c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must first know the <strong>property of associativity</strong> for natural numbers under addition, which says for three natural numbers $$a,$$ $$b,$$ and $$c$$ you can change the order of addition using parentheses and still get the same product, $|(a+b)+c=a+(b+c).|$ Try this property for yourself using three arbitrary natural numbers $$a$$, $$b$$, and $$c$$. '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_4'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_4'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_4',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_4',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_4',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_4',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_4',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_4',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_4',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_4',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_4',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_4',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_4',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_4',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_4',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_4',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_4   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_4   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_4 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_4 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_4 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_4 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_4 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_4 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_4 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_4'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var associativity = [             "(%s + %s) + %s = %s + (%s + %s)"             ];          var iterations = 10;         do {             a = natural();             b = natural();             c = natural();         } while (is_gt(iterations--, 0) && ((a === b) || (b === c) || (a === c)));          symbols.eq = associativity.ctns_rand().ctns_format( [String(a), String(b), String(c), String(a), String(b), String(c)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that addition for integers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Addition for integers is associative for any three integers $$a,$$ $$b,$$ and $$c,$$ $|(a+b)+c = a+(b+c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must first know the <strong>property of associativity</strong> for integers under addition, which says for three integers $$a,$$ $$b,$$ and $$c$$ you can change the order of addition using parentheses and still get the same sum, $|(a+b)+c=a+(b+c).|$ Try this property for yourself using three arbitrary integers $$a$$, $$b$$, and $$c$$. '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_5'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_5'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_5',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_5',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_5',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_5',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_5',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_5',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_5',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_5',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_5',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_5',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_5',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_5',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_5',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_5',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_5   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_5   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_5 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_5 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_5 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_5 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_5 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_5 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_5 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_5'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var associativity = [             "(%s + %s) + %s = %s + (%s + %s)"             ];          var iterations = 10;         do {             a = natural();             b = natural();             c = real();         } while (is_gt(iterations--, 0) && ((a === b) || (b === c) || (a === c)));          symbols.eq = associativity.ctns_rand().ctns_format( [String(a), String(b), String(c), String(a), String(b), String(c)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that addition for real numbers is associative. $| \\footnotesize ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Addition for real numbers is associative for any three real numbers $$a,$$ $$b,$$ and $$c,$$ $|(a+b)+c = a+(b+c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must first know the <strong>property of associativity</strong> for real numbers under addition, which says for three real numbers $$a,$$ $$b,$$ and $$c$$ you can change the order of addition using parentheses and still get the same sum, $|(a+b)+c=a+(b+c).|$ Try this property for yourself using three arbitrary real numbers $$a$$, $$b$$, and $$c$$. '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_6'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_6'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_6',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_6',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_6',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_6',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_6',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_6',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_6',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_6',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_6',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_6',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_6',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_6',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_6',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_6',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_6   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_6   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_6 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_6 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_6 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_6 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_6 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_6 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_6 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_6 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_6 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_6 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_6 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_6 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_6 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_6 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_6'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var commutativity = [             "%s + %s = %s + %s"             ];          var iterations = 10;         do {             a = natural();             b = natural();         } while (is_gt(iterations--, 0) && a === b);          symbols.eq = commutativity.ctns_rand().ctns_format( [String(a), String(b), String(b), String(a)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that addition for natural numbers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Addition for natural numbers is commutative for any two natural numbers $$a$$ and $$b$$, $|a+b = b+a.|$ Addition for natural numbers is associative for any three natural numbers $$a$$ $$b,$$ and $$c,$$ $|(a+b)+c=a+(b+c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must know the <strong>property of commutativity</strong> AND the <strong>property of associativity</strong> for natural numbers under addition. Remember that for two natural numbers $$a,$$ and $$b,$$ the property of commutativity says you can swap the order of addition and get the same result, $|a+b = b+a.|$ '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_7'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_7'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_7',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_7',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_7',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_7',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_7',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_7',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_7',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_7',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_7',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_7',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_7',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_7',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_7',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_7',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_7   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_7   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_7 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_7 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_7 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_7 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_7 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_7 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_7 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_7 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_7 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_7 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_7 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_7 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_7 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_7 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_7'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var commutativity = [             "%s + %s = %s + %s"             ];          var iterations = 10;         do {             a = natural();             b = natural();         } while (is_gt(iterations--, 0) && a === b);          symbols.eq = commutativity.ctns_rand().ctns_format( [String(a), String(b), String(b), String(a)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that addition for integers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Addition for integers is commutative for any two integers $$a$$ and $$b$$, $|a+b = b+a.|$ Addition for integers is associative for any three integers $$a,$$ $$b,$$ and $$c,$$ $|(a+b)+c=a+(b+c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must know the <strong>property of commutativity</strong> AND the <strong>property of associativity</strong> for integers under addition. Remember that for two integers $$a$$ and $$b,$$ the property of commutativity says you can swap the order of addition and get the same result, $|a+b = b+a.|$ '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_8'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_8'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_8',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_8',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_8',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_8',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_8',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_8',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_8',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_8',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_8',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_8',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_8',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_8',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_8',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_8',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_8   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_8   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_8 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_8 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_8 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_8 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_8 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_8 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_8 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_8 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_8 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_8 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_8 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_8 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_8 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_8 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_8'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var commutativity = [             "%s + %s = %s + %s"             ];          var iterations = 10;         do {             a = real();             b = real();         } while (is_gt(iterations--, 0) && a === b);          symbols.eq = commutativity.ctns_rand().ctns_format( [String(a), String(b), String(b), String(a)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that addition for real numbers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Addition for real numbers is commutative for any two real numbers $$a$$ and $$b$$, $|a+b = b+a.|$ Addition for real numbers is associative for any three real numbers $$a,$$ $$b,$$ and $$c,$$ $|(a+b)+c=a+(b+c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must know the <strong>property of commutativity</strong> AND the <strong>property of associativity</strong> for real numbers under addition. Remember that for two real numbers $$a$$ and $$b,$$ the property of commutativity says you can swap the order of addition and get the same result, $|a+b = b+a.|$ '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_9'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_9'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_9',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_9',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_9',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_9',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_9',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_9',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_9',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_9',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_9',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_9',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_9',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_9',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_9',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_9',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_9   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_9   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_9 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_9 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_9 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_9 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_9 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_9 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_9 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_9 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_9 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_9 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_9 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_9 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_9 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_9 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_9'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];         /* See Make.php for this dummy entry. A custom script will override this entry. */             [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_10'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_10'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_10',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_10',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_10',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_10',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_10',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_10',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_10',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_10',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_10',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_10',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_10',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_10',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_10',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_10',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_10   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_10   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_10 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_10 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_10 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_10 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_10 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_10 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_10 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_10 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_10 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_10 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_10 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_10 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_10 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_10 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_10'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];         /* See Make.php for this dummy entry. A custom script will override this entry. */             [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_11'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_11'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_11',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_11',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_11',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_11',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_11',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_11',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_11',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_11',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_11',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_11',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_11',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_11',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_11',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_11',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_11   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_11   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_11 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_11 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_11 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_11 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_11 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_11 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_11 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_11 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_11 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_11 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_11 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_11 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_11 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_11 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_11'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];         /* See Make.php for this dummy entry. A custom script will override this entry. */             [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_12'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_12'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_12',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_12',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_12',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_12',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_12',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_12',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_12',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_12',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_12',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_12',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_12',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_12',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_12',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_12',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_12   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_12   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_12 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_12 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_12 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_12 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_12 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_12 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_12 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_12 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_12 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_12 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_12 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_12 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_12 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_12 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_12'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var associativity = [             "(%s \\cdot %s)  \\cdot %s = %s \\cdot (%s \\cdot %s)"             ];          var iterations = 10;         do {             a = natural();             b = natural();             c = natural();         } while (is_gt(iterations--, 0) && ((a === b) || (b === c) || (a === c)));          symbols.eq = associativity.ctns_rand().ctns_format( [String(a), String(b), String(c), String(a), String(b), String(c)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that multiplication for natural numbers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Multiplication for natural numbers is associative for any three natural numbers $$a,$$ $$b,$$ and $$c,$$ $|(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must first know the <strong>property of associativity</strong> for natural numbers under multiplication, which says for three natural numbers $$a,$$ $$b,$$ and $$c$$ you can change the order of multiplication using parentheses and still get the same product, $|(a \\cdot b) \\cdot c=a \\cdot (b \\cdot c).|$ Try this property for yourself using three arbitrary natural numbers $$a$$, $$b$$, and $$c$$. '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_13'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_13'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_13',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_13',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_13',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_13',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_13',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_13',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_13',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_13',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_13',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_13',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_13',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_13',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_13',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_13',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_13   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_13   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_13 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_13 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_13 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_13 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_13 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_13 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_13 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_13 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_13 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_13 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_13 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_13 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_13 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_13 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_13'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var associativity = [             "(%s \\cdot %s)  \\cdot %s = %s \\cdot (%s \\cdot %s)"             ];          var iterations = 10;         do {             a = natural();             b = natural();             c = natural();         } while (is_gt(iterations--, 0) && ((a === b) || (b === c) || (a === c)));          symbols.eq = associativity.ctns_rand().ctns_format( [String(a), String(b), String(c), String(a), String(b), String(c)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that multiplication for integers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Multiplication for integers is associative for any three integers $$a,$$ $$b,$$ and $$c,$$ $|(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must first know the <strong>property of associativity</strong> for integers under multiplication, which says for three integers $$a,$$ $$b,$$ and $$c$$ you can change the order of multiplication using parentheses and still get the same product, $|(a \\cdot b) \\cdot c=a \\cdot (b \\cdot c).|$ Try this property for yourself using three arbitrary integers $$a$$, $$b$$, and $$c$$. '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_14'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_14'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_14',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_14',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_14',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_14',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_14',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_14',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_14',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_14',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_14',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_14',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_14',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_14',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_14',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_14',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_14   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_14   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_14 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_14 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_14 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_14 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_14 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_14 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_14 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_14 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_14 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_14 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_14 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_14 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_14 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_14 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_14'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var associativity = [             "(%s \\cdot %s)  \\cdot %s = %s \\cdot (%s \\cdot %s)"             ];          var iterations = 10;         do {             a = natural();             b = real();             c = natural();         } while (is_gt(iterations--, 0) && ((a === b) || (b === c) || (a === c)));          symbols.eq = associativity.ctns_rand().ctns_format( [String(a), String(b), String(c), String(a), String(b), String(c)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that multiplication for real numbers is associative. $| \\footnotesize ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Multiplication for real numbers is associative for any three real numbers $$a,$$ $$b,$$ and $$c,$$ $|(a \\cdot b) \\cdot c = a \\cdot (b \\cdot c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must first know the <strong>property of associativity</strong> for real numbers under multiplication, which says for three real numbers $$a,$$ $$b,$$ and $$c$$ you can change the order of multiplication using parentheses and still get the same product, $|(a \\cdot b) \\cdot c=a \\cdot (b \\cdot c).|$ Try this property for yourself using three arbitrary real numbers $$a$$, $$b$$, and $$c$$. '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_15'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_15'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_15',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_15',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_15',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_15',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_15',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_15',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_15',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_15',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_15',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_15',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_15',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_15',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_15',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_15',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_15   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_15   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_15 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_15 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_15 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_15 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_15 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_15 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_15 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_15 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_15 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_15 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_15 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_15 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_15 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_15 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_15'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var commutativity = [             "%s \\cdot %s = %s \\cdot %s"             ];          var iterations = 10;         do {             a = natural();             b = natural();         } while (is_gt(iterations--, 0) && a === b);          symbols.eq = commutativity.ctns_rand().ctns_format( [String(a), String(b), String(b), String(a)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that multiplication for natural numbers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Multiplication for natural numbers is commutative for any two natural numbers $$a$$ and $$b$$, $|a \\cdot b = b \\cdot a.|$ Multiplication for natural numbers is associative for any three natural numbers $$a$$ $$b,$$ and $$c,$$ $|(a \\cdot b) \\cdot c=a \\cdot (b \\cdot c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must know the <strong>property of commutativity</strong> AND the <strong>property of associativity</strong> for natural numbers under multiplication. Remember that for two natural numbers $$a,$$ and $$b,$$ the property of commutativity says you can swap the order of multiplication and get the same result, $|a \\cdot b = b \\cdot a.|$ '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_16'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_16'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_16',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_16',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_16',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_16',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_16',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_16',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_16',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_16',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_16',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_16',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_16',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_16',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_16',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_16',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_16   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_16   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_16 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_16 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_16 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_16 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_16 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_16 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_16 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_16 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_16 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_16 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_16 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_16 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_16 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_16 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_16'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var commutativity = [             "%s \\cdot %s = %s \\cdot %s"             ];          var iterations = 10;         do {             a = natural();             b = natural();         } while (is_gt(iterations--, 0) && a === b);          symbols.eq = commutativity.ctns_rand().ctns_format( [String(a), String(b), String(b), String(a)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that multiplication for integers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Multiplication for integers is commutative for any two integers $$a$$ and $$b$$, $|a \\cdot b = b \\cdot a.|$ Multiplication for integers is associative for any three integers $$a,$$ $$b,$$ and $$c,$$ $|(a \\cdot b) \\cdot c=a \\cdot (b \\cdot c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must know the <strong>property of commutativity</strong> AND the <strong>property of associativity</strong> for integers under multiplication. Remember that for two integers $$a$$ and $$b,$$ the property of commutativity says you can swap the order of multiplication and get the same result, $|a \\cdot b = b \\cdot a.|$ '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_17'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_17'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_17',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_17',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_17',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_17',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_17',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_17',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_17',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_17',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_17',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_17',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_17',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_17',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_17',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_17',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_17   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_17   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_17 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_17 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_17 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_17 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_17 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_17 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_17 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_17 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_17 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_17 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_17 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_17 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_17 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_17 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_17'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 var commutativity = [             "%s \\cdot %s = %s \\cdot %s"             ];          var iterations = 10;         do {             a = real();             b = real();         } while (is_gt(iterations--, 0) && a === b);          symbols.eq = commutativity.ctns_rand().ctns_format( [String(a), String(b), String(b), String(a)] );          q.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' The equation below demonstrates that multiplication for real numbers is associative. $| ${eq} |$ '));               r.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' Multiplication for real numbers is commutative for any two real numbers $$a$$ and $$b$$, $|a \\cdot b = b \\cdot a.|$ Multiplication for real numbers is associative for any three real numbers $$a,$$ $$b,$$ and $$c,$$ $|(a \\cdot b) \\cdot c=a \\cdot (b \\cdot c).|$ '));           w.push(tex({'symbols':symbols, 'reveal':'hide', 'system':'katex'},' To answer this question you must know the <strong>property of commutativity</strong> AND the <strong>property of associativity</strong> for real numbers under multiplication. Remember that for two real numbers $$a$$ and $$b,$$ the property of commutativity says you can swap the order of multiplication and get the same result, $|a \\cdot b = b \\cdot a.|$ '));           $(qblock).html(q.join(' '));         $(rightblock).html(r.join(' '));         $(wrongblock).html(w.join(' '));         $(undecidedblock).html(w.join(' '));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);};