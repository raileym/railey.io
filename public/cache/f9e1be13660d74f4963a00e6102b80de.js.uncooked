
  CTNS.QUIZ_SET["f9e1be13660d74f4963a00e6102b80de"] = function (PYTHON_ID) {
  
  /* SAMPLE: MASTERID */
  /* SAMPLE: GENERIC_MARKER */
  /* Unfortunately, I must key my Javascript off of the incoming
   * value of PYTHON_ID, not off the FACTORYID that comes through
   * PHP.
   */
  CTNS_ID                       = 'ctns_GENERIC_MARKER';
  
  var ctns_marker = ctns_marker || {};
  ctns_marker.quiz = "CTNS technical details on a quiz table:";

  (function(CTNS, myRWU_factoryid, questions_meta, questions) {
	
	var slides,
	    do_quiz = CTNS.QUIZ.do_quiz,
	    do_katex = CTNS.PROBLEMS.do_katex,
	    do_matex = CTNS.PROBLEMS.do_matex,
	    do_force = CTNS.PROBLEMS.do_force,
	    do_center = CTNS.PROBLEMS.do_center;
	    
	slides = do_quiz(CTNS, questions, myRWU_factoryid, 'GENERIC_MARKER', 6);
	
    jQuery(slides).each(function(idx, ele) {
        jQuery(ele).addClass('slide-'+idx);
    });
    
    /*
    if ( questions_meta.shuffleSlides ) {
        var newSlides = jQuery(slides).shuffle();
    }
    */
    
    /* This process could be a bug ... check out shuffle later
     */
    var newSlides = slides;
                
    if ( questions_meta.showDivide ) {
       
        jQuery(newSlides).removeClass('ctns-hide').after('<hr class="ctns-one-page"/>');

    } else {
    
        jQuery(newSlides).removeClass('ctns-hide');

    }

	do_katex();
	do_matex();

	jQuery(".slide_GENERIC_MARKER").each( function() {do_center(this)} );

    do_force('GENERIC_MARKER');
    
  })(CTNS, 
     "", 
     CTNS.QUESTIONS_META[CTNS_ID] = {
         count:         6,
         shuffleSlides: false,
         showDivide:    true,
     }, 
     CTNS.QUESTIONS[CTNS_ID] = [
{
    slideNo: 0,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "solnSetQ1-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div> ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 1,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "solnSetQ1-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div> ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 2,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "solnSetQ2-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div> ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 3,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "solnSetQ2-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div> ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 4,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "solnSetQ3-1",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {a:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",b:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div> ",
    rightAnswer: "a",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "b",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
{
    slideNo: 5,
    factoryid: 'GENERIC_MARKER',
    masterid: 'MASTERID',
    wpscript: "See notes in code",
    ctns_id: CTNS_ID,
    qid: "",
    description: "",
    sponsor: "",
    figure: "",
    key: "solnSetQ3-2",
    label: "Ctns\Question",
    multipleChoice: {a: "True", b: "False" },
    back: "",
    commentary: {b:"<scan class='ctns-right'>That answer is correct.</scan>  <!-- rightblock --><div id='rightblock_MASTERID' class='rightblock'></div> ",a:"<scan class='ctns-wrong'>That answer is incorrect.</scan>  <!-- wrongblock --><div id='wrongblock_MASTERID' class='wrongblock'></div> ",undecided:"<scan class='ctns-wrong'>No answer selected.</scan>  <!-- undecidedblock --><div id='undecidedblock_MASTERID' class='undecidedblock'></div> "},
    frontSpeak: "",
    backSpeak: "",
    frontSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    backSpeakIcon: "<div class='ctns-icon-25x25 ctns-single-png'></div>",
    front: "",
    question: " <!-- questionblock --><div id='questionblock_MASTERID' class='questionblock'></div> ",
    rightAnswer: "b",
    answer: " <!-- answerblock --><div id='answerblock_MASTERID' class='answerblock'></div> ",
    wrongAnswer: "a",
    answerCommentary: " <!-- answercommentaryblock --><div id='answercommentaryblock_MASTERID' class='answercommentaryblock'></div> ",

    height: "350",
    width: "350",
    graph_height: "345",
    graph_width: "345",
    
    style: "",
    slideStyle: "",
    frontStyle: "",
    backStyle: "",
    questionStyle: "",
    answerStyle: "",
    commentaryStyle: "",
    multipleChoiceStyle: "",

    css: "",
    labelCss: "",
    slideCss: "",
    frontCss: "",
    backCss: "",
    questionCss: "",
    answerCss: "",
    commentaryCss: "",
    multipleChoiceCss: "",
},
]);
/* This values are set only once for any particular
 * quiz container.
 */
CTNS.NUMBERS.GID = 'quiz_GENERIC_MARKER';
CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'] = [];
CTNS.NUMBERS.symbols['quiz_GENERIC_MARKER'] = CTNS.NUMBERS.symbols['quiz_GENERIC_MARKER'] || {};

/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_0'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_0'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_0',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_0',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_0',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_0',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_0',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_0',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_0',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_0',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_0',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_0',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_0',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_0',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_0',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_0',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_0   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_0   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_0 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_0 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_0 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_0 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_0 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_0 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_0 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_0 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_0'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 do {             symbols.m  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.b  = [-3, -2, -1, 1, 2, 3].ctns_rand();                      symbols.x  = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();             symbols.y  = symbols.m * symbols.x + symbols.b;         } while (symbols.y == 0);                  symbols.x_ = colorized.ctns_format(["blue", "( %s )".ctns_format([symbols.x]) ]);         symbols.y_ = colorized.ctns_format(["blue", symbols.y]);          symbols.point  = "( %s, %s )".ctns_format([symbols.x, symbols.y]);         symbols.point_ = colorized.ctns_format(["blue", symbols.point]);                  symbols.EQ = "y = %s x + %s".ctns_format([symbols.m, symbols.b]).ctns_equation();                  symbols.SOLN = " \\begin{aligned} y & = %s  x + %s \\\\ & = %s %s + %s \\\\ & = %s    + %s \\\\ & = %s         \\\\ \\end{aligned} ".ctns_format([ symbols.m, symbols.b,  symbols.m, symbols.x_, symbols.b, symbols.m * symbols.x, symbols.b, symbols.y_]).ctns_equation();                  q.push(' Is the point $$ ${point} $$ a solution to the equation $| ${EQ}? |$ <br><button class="ctns-button ctns-toggle-answer">Show Answer</button> ');               c.push(' Yes, $$ ${point_} $$ is a solution to this equation. By solving for $$y$$ and substituting $$x = ${x_}$$, we find the value $$y = ${y_}$$, $| ${SOLN} |$ ');               $(qblock).html(tex({'symbols':symbols}, q.join(' ')));         $(ablock).html(tex({'symbols':symbols}, q.join(' ').replace(/q_/g,'a_')));         $(acblock).html(tex({'symbols':symbols}, c.join(' ')));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_1'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_1'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_1',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_1',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_1',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_1',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_1',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_1',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_1',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_1',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_1',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_1',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_1',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_1',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_1',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_1',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_1   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_1   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_1 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_1 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_1 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_1 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_1 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_1 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_1 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_1 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_1'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 do {             symbols.m  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.b  = [-3, -2, -1, 1, 2, 3].ctns_rand();                      symbols.x  = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();             symbols.y  = -1*(symbols.m * symbols.x + symbols.b); /* Notice I flipped the sign */         } while (symbols.y == 0);                  symbols.x_  = colorized.ctns_format(["blue", symbols.x]);         symbols.x_p = colorized.ctns_format(["blue", "( %s )".ctns_format([symbols.x]) ]);         symbols.y_  = colorized.ctns_format(["blue", symbols.y]);          symbols.correct_ = colorized.ctns_format(["blue", -1*symbols.y]); /* flipped sign back */          symbols.point  = "( %s, %s )".ctns_format([symbols.x, symbols.y]);         symbols.point_ = colorized.ctns_format(["blue", symbols.point]);                  symbols.EQ = "y = %s x + %s".ctns_format([symbols.m, symbols.b]).ctns_equation();                  symbols.SOLN = " \\begin{aligned} y & = %s  x + %s \\\\ & = %s %s + %s \\\\ & = %s    + %s \\\\ & = %s         \\\\ \\end{aligned} ".ctns_format([ symbols.m, symbols.b,  symbols.m, symbols.x_p, symbols.b, symbols.m * symbols.x, symbols.b, symbols.correct_]).ctns_equation();                  q.push(' Is the point $$ ${point} $$ a solution to the equation $| ${EQ}? |$ <br><button class="ctns-button ctns-toggle-answer">Show Answer</button> ');               c.push(' No, $$ ${point_} $$ is NOT a solution to this equation. By solving for $$y$$ and substituting $$x = ${x_p}$$, we find the value $$y = ${correct_}$$, $| ${SOLN} |$ The resulting value of $$y = ${correct_}$$ for $$x = ${x_p}$$ matches a correct solution to this equation, $$( ${x_}, ${correct_} ).$$ ');               $(qblock).html(tex({'symbols':symbols}, q.join(' ')));         $(ablock).html(tex({'symbols':symbols}, q.join(' ').replace(/q_/g,'a_')));         $(acblock).html(tex({'symbols':symbols}, c.join(' ')));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_2'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_2'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_2',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_2',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_2',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_2',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_2',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_2',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_2',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_2',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_2',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_2',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_2',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_2',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_2',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_2',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_2   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_2   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_2 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_2 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_2 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_2 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_2 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_2 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_2 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_2 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_2'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 do {             symbols.a  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.b  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.m  = [-3, -2, -1, 1, 2, 3].ctns_rand();                      symbols.x  = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();             symbols.y  = symbols.m * (symbols.x - symbols.a) + symbols.b;             symbols.y_ = symbols.y;         } while (symbols.y == 0);                  symbols.x_  = colorized.ctns_format(["blue", symbols.x]);         symbols.x_p = colorized.ctns_format(["blue", "( %s )".ctns_format([symbols.x]) ]);         symbols.y_  = colorized.ctns_format(["blue", symbols.y]);          symbols.point  = "( %s, %s )".ctns_format([symbols.x, symbols.y]);         symbols.point_ = colorized.ctns_format(["blue", symbols.point]);                  symbols.EQ = "y - %s = %s ( x - %s )".ctns_format([symbols.b, symbols.m, symbols.a]).ctns_equation();                  symbols.SOLN = " \\begin{aligned} y - %s & = %s ( x  - %s )      \\\\ y      & = %s ( x  - %s ) + %s \\\\    & = %s ( %s - %s ) + %s \\\\    & = %s ( %s )      + %s \\\\    & = %s             + %s \\\\    & = %s                  \\\\ \\end{aligned} ".ctns_format([ symbols.b, symbols.m, symbols.a,  symbols.m, symbols.a, symbols.b, symbols.m, symbols.x_p, symbols.a, symbols.b, symbols.m, symbols.x - symbols.a, symbols.b, symbols.m * (symbols.x - symbols.a), symbols.b, symbols.y_]).ctns_equation();                  q.push(' Is the point $$ ${point} $$ a solution to the equation $| ${EQ}? |$ <br><button class="ctns-button ctns-toggle-answer">Show Answer</button> ');               c.push(' Yes, $$ ${point_} $$ is a solution to this equation. By solving for $$y$$ and substituting $$x = ${x_p}$$, we find the value $$y = ${y_}$$, $| ${SOLN} |$ ');               $(qblock).html(tex({'symbols':symbols}, q.join(' ')));         $(ablock).html(tex({'symbols':symbols}, q.join(' ').replace(/q_/g,'a_')));         $(acblock).html(tex({'symbols':symbols}, c.join(' ')));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_3'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_3'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_3',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_3',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_3',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_3',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_3',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_3',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_3',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_3',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_3',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_3',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_3',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_3',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_3',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_3',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_3   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_3   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_3 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_3 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_3 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_3 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_3 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_3 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_3 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_3 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_3'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 do {             symbols.a  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.b  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.m  = [-3, -2, -1, 1, 2, 3].ctns_rand();                      symbols.x  = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();             symbols.y  = -1* (symbols.m * (symbols.x - symbols.a) + symbols.b); /* Notice I flipped the sign */             symbols.y_ = symbols.y;         } while (symbols.y == 0);                  symbols.x_  = colorized.ctns_format(["blue", symbols.x]);         symbols.x_p = colorized.ctns_format(["blue", "( %s )".ctns_format([symbols.x]) ]);         symbols.y_  = colorized.ctns_format(["blue", symbols.y]);          symbols.correct_ = colorized.ctns_format(["blue", -1*symbols.y]); /* flipped sign back */          symbols.point  = "( %s, %s )".ctns_format([symbols.x, symbols.y]);         symbols.point_ = colorized.ctns_format(["blue", symbols.point]);                  symbols.EQ = "y - %s = %s ( x - %s )".ctns_format([symbols.b, symbols.m, symbols.a]).ctns_equation();                  symbols.SOLN = " \\begin{aligned} y - %s & = %s ( x  - %s )      \\\\ y      & = %s ( x  - %s ) + %s \\\\    & = %s ( %s - %s ) + %s \\\\    & = %s ( %s )      + %s \\\\    & = %s             + %s \\\\    & = %s                  \\\\ \\end{aligned} ".ctns_format([ symbols.b, symbols.m, symbols.a,  symbols.m, symbols.a, symbols.b, symbols.m, symbols.x_p, symbols.a, symbols.b, symbols.m, symbols.x - symbols.a, symbols.b, symbols.m * (symbols.x - symbols.a), symbols.b, symbols.correct_]).ctns_equation();                  q.push(' Is the point $$ ${point} $$ a solution to the equation $| ${EQ}? |$ <br><button class="ctns-button ctns-toggle-answer">Show Answer</button> ');               c.push(' No, $$ ${point_} $$ is NOT a solution to this equation. By solving for $$y$$ and substituting $$x = ${x_p}$$, we find the value $$y = ${correct_}$$, $| ${SOLN} |$ The resulting value of $$y = ${correct_}$$ for $$x = ${x_p}$$ matches a correct solution to this equation, $$( ${x_}, ${correct_} ).$$ ');               $(qblock).html(tex({'symbols':symbols}, q.join(' ')));         $(ablock).html(tex({'symbols':symbols}, q.join(' ').replace(/q_/g,'a_')));         $(acblock).html(tex({'symbols':symbols}, c.join(' ')));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_4'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_4'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_4',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_4',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_4',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_4',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_4',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_4',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_4',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_4',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_4',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_4',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_4',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_4',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_4',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_4',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_4   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_4   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_4 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_4 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_4 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_4 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_4 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_4 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_4 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_4 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_4'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 do {             symbols.A  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.B  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.C  = [-3, -2, -1, 1, 2, 3].ctns_rand();                      symbols.x  = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();             symbols.y  = ( symbols.C - (symbols.A * symbols.x) ) / symbols.B;         } while (symbols.y == 0);                  symbols.x_  = colorized.ctns_format(["blue", symbols.x]);         symbols.x_p = colorized.ctns_format(["blue", "( %s )".ctns_format([symbols.x]) ]);         symbols.y_  = colorized.ctns_format(["blue", d2f( symbols.y )]);          symbols.point  = "( %s, %s )".ctns_format([symbols.x, d2f( symbols.y )]);         symbols.point_ = colorized.ctns_format(["blue", symbols.point]);                  symbols.EQ = "%s x + %s y = %s".ctns_format([symbols.A, symbols.B, symbols.C]).ctns_equation();                  symbols.SOLN = " \\begin{aligned} %s x + %s y & =   %s                   \\\\    %s y & =   %s - %s x            \\\\       y & = ( %s - %s x ) / ( %s ) \\\\         & = ( %s - %s %s) / ( %s ) \\\\         & = ( %s - %s ) / ( %s )   \\\\         & = %s / %s                \\\\         & = %s                     \\\\ \\end{aligned} ".ctns_format([ symbols.A, symbols.B, symbols.C,  symbols.B, symbols.C, symbols.A, symbols.C, symbols.A, symbols.B, symbols.C, symbols.A, symbols.x_p, symbols.B, symbols.C, symbols.A * symbols.x, symbols.B, symbols.C - symbols.A * symbols.x, symbols.B, symbols.y_]).ctns_equation();                  q.push(' Is the point $$ ${point} $$ a solution to the equation $| ${EQ}? |$ <br><button class="ctns-button ctns-toggle-answer">Show Answer</button> ');               c.push(' Yes, $$ ${point_} $$ is a solution to this equation. By solving for $$y$$ and substituting $$x = ${x_p}$$, we find the value $$y = ${y_}$$, $| ${SOLN} |$ ');               $(qblock).html(tex({'symbols':symbols}, q.join(' ')));         $(ablock).html(tex({'symbols':symbols}, q.join(' ').replace(/q_/g,'a_')));         $(acblock).html(tex({'symbols':symbols}, c.join(' ')));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);/*  * See citeations.php for this javascript. */CTNS.NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_5'] = CTNS.NUMBERS.symbols['new_scriptblock_GENERIC_MARKER_SlideNo_5'] || {};(function($, CTNS, MATHJS) {    CTNS.NUMBERS.equations['quiz_GENERIC_MARKER'].push( (function(CTNS) {            var VALIDATE   = CTNS.VALIDATE,            PROBLEMS   = CTNS.PROBLEMS,            NUMBERS    = CTNS.NUMBERS,            TERM       = CTNS.TERM,            TABLES     = CTNS.TABLES,            TML_MATH3D = CTNS.TML_MATH3D,            tables     = CTNS.TABLES;                return function() {                    var colorized      = '\\textcolor{%s}{%s}',                        qblock           = '#questionblock_GENERIC_MARKER_SlideNo_5',                ablock           = '#answerblock_GENERIC_MARKER_SlideNo_5',                acblock          = '#answercommentaryblock_GENERIC_MARKER_SlideNo_5',                                rightblock       = '#rightblock_GENERIC_MARKER_SlideNo_5',                wrongblock       = '#wrongblock_GENERIC_MARKER_SlideNo_5',                undecidedblock   = '#undecidedblock_GENERIC_MARKER_SlideNo_5',                grblock          = 'graphicblock_GENERIC_MARKER_SlideNo_5',                grblock_Q        = 'graphicblock_Q_GENERIC_MARKER_SlideNo_5',                grblock_A        = 'graphicblock_A_GENERIC_MARKER_SlideNo_5',                grblock_B        = 'graphicblock_B_GENERIC_MARKER_SlideNo_5',                grblock_C        = 'graphicblock_C_GENERIC_MARKER_SlideNo_5',                grblock_D        = 'graphicblock_D_GENERIC_MARKER_SlideNo_5',                grblock_E        = 'graphicblock_E_GENERIC_MARKER_SlideNo_5',                grblock_F        = 'graphicblock_F_GENERIC_MARKER_SlideNo_5',                                grblock_f        = (typeof tml_GENERIC_MARKER_SlideNo_5   !== 'undefined') ? tml_GENERIC_MARKER_SlideNo_5   : null,                grblock_Q_f      = (typeof tml_Q_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_Q_GENERIC_MARKER_SlideNo_5 : null,                grblock_A_f      = (typeof tml_A_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_A_GENERIC_MARKER_SlideNo_5 : null,                grblock_B_f      = (typeof tml_B_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_B_GENERIC_MARKER_SlideNo_5 : null,                grblock_C_f      = (typeof tml_C_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_C_GENERIC_MARKER_SlideNo_5 : null,                grblock_D_f      = (typeof tml_D_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_D_GENERIC_MARKER_SlideNo_5 : null,                grblock_E_f      = (typeof tml_E_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_E_GENERIC_MARKER_SlideNo_5 : null,                grblock_F_f      = (typeof tml_F_GENERIC_MARKER_SlideNo_5 !== 'undefined') ? tml_F_GENERIC_MARKER_SlideNo_5 : null,                numbers          = NUMBERS,                gid              = 'quiz_GENERIC_MARKER',                                graphic          = NUMBERS,                graphicblock     = NUMBERS.graphicblock,                graphic3dblock   = NUMBERS.graphic3dblock,                                symbols          = NUMBERS.symbols['scriptblock_GENERIC_MARKER_SlideNo_5'],                gsymbols         = NUMBERS.symbols['quiz_GENERIC_MARKER'],                 audio            = PROBLEMS.audio_onDemand,                audio_inline     = PROBLEMS.audio_inline_onDemand,                graphicblock     = NUMBERS.graphicblock,                exposeTextarea   = NUMBERS.exposeTextarea,                d2f              = NUMBERS.mk_d2f,                term             = TERM.term_updated,                is_zero          = NUMBERS.is_zero,                is_pos           = NUMBERS.is_pos,                is_neg           = NUMBERS.is_neg,                is_lt            = NUMBERS.is_lt,                is_gt            = NUMBERS.is_gt,                is_gte           = NUMBERS.is_gte,                is_lte           = NUMBERS.is_lte,                tex              = NUMBERS.mk_tex,                d2f              = NUMBERS.mk_d2f,                abs              = NUMBERS.mk_abs,                addparen         = NUMBERS.mk_addparen,                natural          = NUMBERS.natural,                imaginary        = NUMBERS.imaginary,                negative         = NUMBERS.negative,                rational         = NUMBERS.rational,                irrational       = NUMBERS.irrational,                integer          = NUMBERS.integer,                decimal          = NUMBERS.decimal,                odd              = NUMBERS.odd,                even             = NUMBERS.even,                real             = NUMBERS.real,                complex          = NUMBERS.complex,                whole            = NUMBERS.whole,                term             = TERM.term_updated,                debug            = NUMBERS.debug,                    a = [],                c = [],                q = [],                r = [],                w = [],                d = [];                 do {             symbols.A  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.B  = [-3, -2, -1, 1, 2, 3].ctns_rand();             symbols.C  = [-3, -2, -1, 1, 2, 3].ctns_rand();                      symbols.x  = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();             symbols.y  = -1 * ( symbols.C - (symbols.A * symbols.x) ) / symbols.B; /* Notice I flipped the sign */         } while (symbols.y == 0);                  symbols.x_  = colorized.ctns_format(["blue", symbols.x]);         symbols.x_p = colorized.ctns_format(["blue", "( %s )".ctns_format([symbols.x]) ]);         symbols.y_  = colorized.ctns_format(["blue", d2f( symbols.y )]);          symbols.correct_ = colorized.ctns_format(["blue", d2f( -1*symbols.y )]); /* flipped sign back */          symbols.point  = "( %s, %s )".ctns_format([symbols.x, d2f( symbols.y )]);         symbols.point_ = colorized.ctns_format(["blue", symbols.point]);                  symbols.EQ = "%s x + %s y = %s".ctns_format([symbols.A, symbols.B, symbols.C]).ctns_equation();                  symbols.SOLN = " \\begin{aligned} %s x + %s y & =   %s                   \\\\    %s y & =   %s - %s x            \\\\       y & = ( %s - %s x ) / ( %s ) \\\\         & = ( %s - %s %s) / ( %s ) \\\\         & = ( %s - %s ) / ( %s )   \\\\         & = %s / %s                \\\\         & = %s                     \\\\ \\end{aligned} ".ctns_format([ symbols.A, symbols.B, symbols.C,  symbols.B, symbols.C, symbols.A, symbols.C, symbols.A, symbols.B, symbols.C, symbols.A, symbols.x_p, symbols.B, symbols.C, symbols.A * symbols.x, symbols.B, symbols.C - symbols.A * symbols.x, symbols.B, symbols.correct_]).ctns_equation();                  q.push(' Is the point $$ ${point} $$ a solution to the equation $| ${EQ}? |$ <br><button class="ctns-button ctns-toggle-answer">Show Answer</button> ');               c.push(' No, $$ ${point_} $$ is NOT a solution to this equation. By solving for $$y$$ and substituting $$x = ${x_p}$$, we find the value $$y = ${correct_}$$, $| ${SOLN} |$ The resulting value of $$y = ${correct_}$$ for $$x = ${x_p}$$ matches a correct solution to this equation, $$( ${x_}, ${correct_} ).$$ ');               $(qblock).html(tex({'symbols':symbols}, q.join(' ')));         $(ablock).html(tex({'symbols':symbols}, q.join(' ').replace(/q_/g,'a_')));         $(acblock).html(tex({'symbols':symbols}, c.join(' ')));                 [grblock_f,             grblock_Q_f,             grblock_A_f,             grblock_B_f,             grblock_C_f,             grblock_D_f,             grblock_E_f,             grblock_F_f].forEach(function(e) {                     if (null === e) {                    return;                }                                e(symbols, gsymbols, NUMBERS);                    });            [grblock,             grblock_Q,             grblock_A,             grblock_B,             grblock_C,             grblock_D,             grblock_E,             grblock_F].forEach(function(e) {                if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {                    window[e].board.update();                }            });        }})(CTNS));           })( jQuery, CTNS, window.math);};