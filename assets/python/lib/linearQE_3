[ctns_make id='linearQE_3']

    [ctns_problem_height]
        2850
    [/ctns_problem_height]
    
    [ctns_problem_width]
        704
    [/ctns_problem_width]
            
    [ctns_description]
Given a quadratic function, find the axis of symmetry, the vertex, and two points on the graph.
    [/ctns_description]
    
    [ctns_script]
        /* I am toggling between quadrants so that my lines have more
         * of a slant to them. Remember, this graph is meant to be 
         * instructional.
         */
        if ( [0, 1].ctns_rand() ) {

            /* Go positive */
            do {
                symbols.xHigh = [4, 3, 2, 1].ctns_rand();
                symbols.yHigh = [-4, -3, -2, -1, 1, 2, 3, 4].ctns_rand();
                symbols.xLow = [-1, -2, -3, -4].ctns_rand();
                symbols.yLow = [-4, -3, -2, -1, 1, 2, 3, 4].ctns_rand();
                symbols.xSide = symbols.xHigh + 1;
                symbols.ySide = (symbols.yHigh+symbols.yLow)/2;
                symbols.xBase = (symbols.xHigh+symbols.xLow)/2;
                symbols.yBase = symbols.yLow - 0.75;
            } while( symbols.xHigh == symbols.xLow || symbols.yHigh == symbols.yLow || is_lt(symbols.yHigh, symbols.yLow) );

        } else {

            /* Go negative */
            do {
                symbols.xHigh = [-4, -3, -2, -1].ctns_rand();
                symbols.yHigh = [-4, -3, -2, -1, 1, 2, 3, 4].ctns_rand();
                symbols.xLow = [1, 2, 3, 4].ctns_rand();
                symbols.yLow = [-4, -3, -2, -1, 1, 2, 3, 4].ctns_rand();
                symbols.xSide = symbols.xHigh - 1.2;
                symbols.ySide = (symbols.yHigh+symbols.yLow)/2;
                symbols.xBase = (symbols.xHigh+symbols.xLow)/2;
                symbols.yBase = symbols.yLow - 0.75;
            } while( symbols.xHigh == symbols.xLow || symbols.yHigh == symbols.yLow || is_lt(symbols.yHigh, symbols.yLow) );

        }

        symbols.RISE = symbols.yHigh - symbols.yLow;
        symbols.RUN = symbols.xHigh - symbols.xLow;
                
        q.push('
Consider the line shown below. <br><br>
');

    q.push( graphicblock( {"dim":"6", "gid":grblock_A}) );

        q.push('
<br>Mark two points on the line that are easy to
identify on the grid.<br><br>
');

    q.push( graphicblock( {"dim":"6", "gid":grblock_B}) );

        q.push('
<br>Next, draw a horizontal line through your lowest point. This
line will serve as the base of your triangle.<br><br>
');

    q.push( graphicblock( {"dim":"6", "gid":grblock_C}) );

        q.push('
<br>And now, draw a vertical line through your highest point. This
line will serve as the side of your triangle.<br><br>
');

    q.push( graphicblock( {"dim":"6", "gid":grblock_D}) );

        q.push('
<br>And finally, shade in your triangle bounded by your line, 
side, and base.<br><br>
');

    q.push( graphicblock( {"dim":"6", "gid":grblock_E}) );

        q.push('
<br>The red arrows show the RISE and RUN of your
triangle.<br><br>
');

    q.push( graphicblock( {"dim":"6", "gid":grblock_F}) );

        q.push('
<br>Count the squares for your RISE ($$ \normalsize \color{red} ${RISE} $$) over RUN ($$ \normalsize \color{red} ${RUN} $$). 
The RUN is negative if it runs from right-to-left.

$|\Large \frac{RISE}{RUN} = \frac{ \color{red}{ ${RISE} } }{ \color{red}{ ${RUN} } } |$<br><br>
');

    $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
                
    [/ctns_script]
    
    [ctns_shortcode]
[graph tag='A' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='top'    coordinates='( function() { return st.xHigh;}, function() { return st.yHigh;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bottom' coordinates='( function() { return st.xLow ;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bottom' end='top' style='solid' color='black' showline='true']
[/graph]	 	 

[graph tag='B' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='top'    coordinates='( function() { return st.xHigh;}, function() { return st.yHigh;} )' labeloffsetx='0' labeloffsety='0' showpoint='true' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bottom' coordinates='( function() { return st.xLow ;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='true' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bottom' end='top' style='solid' color='black' showline='true']
[/graph]	 	 

[graph tag='C' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='top'    coordinates='( function() { return st.xHigh;}, function() { return st.yHigh;} )' labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bottom' coordinates='( function() { return st.xLow ;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='corner' coordinates='( function() { return st.xHigh;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bottom' end='top' style='solid' color='black' showline='true']
[segment start='bottom' end='corner' style='solid' color='blue' showline='true']
[/graph]	 	 

[graph tag='D' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='top'    coordinates='( function() { return st.xHigh;}, function() { return st.yHigh;} )' labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bottom' coordinates='( function() { return st.xLow ;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='corner' coordinates='( function() { return st.xHigh;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bottom' end='top' style='solid' color='black' showline='true']
[segment start='bottom' end='corner' style='solid' color='blue' showline='true']
[segment start='corner' end='top' style='solid' color='blue' showline='true']
[/graph]	 	 

[graph tag='E' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='top'    coordinates='( function() { return st.xHigh;}, function() { return st.yHigh;} )' labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bottom' coordinates='( function() { return st.xLow ;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='corner' coordinates='( function() { return st.xHigh;}, function() { return st.yLow ;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bottom' end='top' style='solid' color='black' showline='true']
[segment start='bottom' end='corner' style='solid' color='blue' showline='true']
[segment start='corner' end='top' style='solid' color='blue' showline='true']
[polygon points='top,bottom,corner' fill='blue' type='polygon' ]
[/graph]	 	 

[graph tag='F' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='top'    coordinates='( function() { return st.xHigh;}, function() { return st.yHigh;} )'  labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bottom' coordinates='( function() { return st.xLow ;}, function() { return st.yLow ;} )'  labeloffsetx='0' labeloffsety='0' showpoint='true'  showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='corner' coordinates='( function() { return st.xHigh;}, function() { return st.yLow ;} )'  labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='side'   coordinates='( function() { return st.xSide;}, function() { return st.ySide ;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='base'   coordinates='( function() { return st.xBase;}, function() { return st.yBase ;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='run'    coordinates='( function() { return st.RUN;},   function() { return 0        ;} )'  labeloffsetx='0' labeloffsety='0'  showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='rise'   coordinates='( function() { return 0     ;},   function() { return st.RISE  ;} )'  labeloffsetx='0' labeloffsety='0'  showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bottom' end='top' style='solid' color='black' showline='true']
[segment start='bottom' end='corner' style='solid' color='red' showline='true' showarrowend='true' offset='0.1']
[segment start='corner' end='top' style='solid' color='red' showline='true' showarrowend='true' offset='0.1']
[polygon points='top,bottom,corner' fill='blue' type='polygon' ]

[mtext id='T0' align='center' point='side' offsetx='0' offsety='0'][gmath addparen='false' points='rise']\color{red} (+rise.y)[/gmath][/mtext]
[mtext id='T1' align='center' point='base' offsetx='0' offsety='0'][gmath addparen='false' points='run' ]\color{red} (+run.x )[/gmath][/mtext]
[mtext id='T2' align='center' point='base' offsetx='0' offsety='0'][gmath addparen='false' points='run' ]\color{red} ( run.x )[/gmath][/mtext]

[calculate id='C1' points='top,bottom' operation='(top.x    GT bottom.x)']
[calculate id='C2' points='top,bottom' operation='(bottom.x GT top.x   )']

[condition ontrue='C1' show='T1']
[condition ontrue='C2' show='T2']

[/graph]	 	 
    [/ctns_shortcode]

    [ctns_element type='build_a_graph' tag="A" height="300" width="300"][/ctns_element]
    [ctns_element type='build_a_graph' tag="B" height="300" width="300"][/ctns_element]
    [ctns_element type='build_a_graph' tag="C" height="300" width="300"][/ctns_element]
    [ctns_element type='build_a_graph' tag="D" height="300" width="300"][/ctns_element]
    [ctns_element type='build_a_graph' tag="E" height="300" width="300"][/ctns_element]
    [ctns_element type='build_a_graph' tag="F" height="300" width="300"][/ctns_element]
    
[/ctns_make]
