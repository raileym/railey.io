[ctns_make id='NT-rational-functionQ1-3']

    [ctns_description]
Synthesize a rational function. Terms are ordered by
degree from highest to lowest. Zero coefficients are
possible. Simply state YES or NO whether this function
is reducible.
    [/ctns_description]
    
    [ctns_question]
TMPL_QUESTIONBLOCK
    [/ctns_question]
    
    [ctns_script]
    var i;
    
    if ( 0 === [0, 1].ctns_rand() ) {

        symbols.isReducible = true;
        
        do {
    
            symbols.dividendDegree = [2, 3, 4].ctns_rand();
            symbols.divisorDegree = [1, 2, 3].ctns_rand();
        
        } while ( is_lt (symbols.dividendDegree, symbols.divisorDegree) );


    } else {

        symbols.isReducible = false;
        
        do {
    
            symbols.dividendDegree = [2, 3, 4].ctns_rand();
            symbols.divisorDegree = [1, 2, 3].ctns_rand();
        
        } while ( is_gte (symbols.dividendDegree, symbols.divisorDegree) );

    }
    
    i=0;
    symbols.dividend_raw = [ [1, 2, 4].ctns_rand() ];
    while ( is_lt(i++, symbols.dividendDegree) ) {
        symbols.dividend_raw.push( [-4, -2, -1, 0, 0, 1, 2, 4].ctns_rand() );
    }

    i=0;
    symbols.divisor_raw = [ [1, 2, 4].ctns_rand() ];
    while ( is_lt(i++, symbols.divisorDegree) ) {
        symbols.divisor_raw.push( [-4, -2, -1, 0, 0, 1, 2, 4].ctns_rand() );
    }

    /* Create my divisor */
    symbols.divisor = [];
    degree = symbols.divisor_raw.length - 1;
    symbols.divisor_raw.forEach(function(e, idx) {
        symbols.divisor.push( term({coef:e, degree:degree--}).term.ctns_equation() );              
    });

    /* Create my dividend */
    symbols.dividend = [];
    degree = symbols.dividend_raw.length - 1;
    symbols.dividend_raw.forEach(function(e, idx) {
        symbols.dividend.push( term({coef:e, degree:degree--}).term.ctns_equation() );              
    });

    symbols.problem = "\frac{%s}{%s}".ctns_format([
        symbols.dividend.join("+").ctns_equation(), 
        symbols.divisor.join("+").ctns_equation()]);
    
    q.push('
$| f(x) = ${problem} |$
');
        
    if ( !symbols.isReducible ) {
    
        q.push('
The function $$f$$ is not reducible, the degree of the dividend ($$ \small ${dividendDegree} $$) is
less than the degree of the divisor ($$ \small ${divisorDegree} $$).
'); 

    } else {

        q.push('
The function $$f$$ is reducible, the degree of the dividend ($$ \small ${dividendDegree} $$) is
equal to or greater than the degree of the divisor ($$ \small ${divisorDegree} $$).
'); 

    }
    
    $(qblock).html(tex({'symbols':symbols}, q.join(' ')));
    [/ctns_script]
    
    [ctns_element type='build_a_graph' height='300' width='300'][/ctns_element]
[/ctns_make]
