[ctns_make id='linearQ6-1']

    [ctns_question style='width:70%;margin-left:auto;margin-right:auto']
TMPL_GRAPHICBLOCK_Q<br/>TMPL_QUESTIONBLOCK
    [/ctns_question]
    
    [ctns_answer style='width:70%;margin-left:auto;margin-right:auto']
TMPL_GRAPHICBLOCK_A<br/>TMPL_ANSWERBLOCK
    [/ctns_answer]
    
    [ctns_script]
        /* random x, y, a, and b */
        do {
            symbols.x = [1, 2, 3, -1, -2, -3].ctns_rand();
            symbols.y = [1, 2, 3, -1, -2, -3].ctns_rand();
            symbols.a = [1, 2, 3, -1, -2, -3].ctns_rand();
            symbols.b = [1, 2, 3, -1, -2, -3].ctns_rand();
        } while ( symbols.x === symbols.a || symbols.y === symbols.b );
        
        /* compute and format the negative reciprocal and the value
         * for the y-intercept b
         */
        symbols.delta_x = symbols.a - symbols.x;
        symbols.delta_y = symbols.b - symbols.y;
        symbols.m_  = d2f( (symbols.b - symbols.y)/(symbols.a - symbols.x) );
        symbols.sx_ = d2f( symbols.x, true );
        symbols.sy_ = d2f( symbols.y, true );
        symbols.sa_ = d2f( symbols.a, true );
        symbols.sb_ = d2f( symbols.b, true );
        
        /* colorize values x, y, a, b, and m differently for q and a */
        symbols.q_m = colorized.ctns_format(['transparent', symbols.m_]);
        symbols.a_m = colorized.ctns_format(['blue', symbols.m_]);
        
        symbols.q_x = colorized.ctns_format(['transparent', symbols.x]);
        symbols.q_y = colorized.ctns_format(['transparent', symbols.y]);
        symbols.q_sx = colorized.ctns_format(['transparent', symbols.sx_]);
        symbols.q_sy = colorized.ctns_format(['transparent', symbols.sy_]);
        symbols.q_sa = colorized.ctns_format(['transparent', symbols.sa_]);
        symbols.q_sb = colorized.ctns_format(['transparent', symbols.sb_]);
        symbols.q_delta_x = colorized.ctns_format(['transparent', symbols.delta_x]);
        symbols.q_delta_y = colorized.ctns_format(['transparent', symbols.delta_y]);

        symbols.a_x = colorized.ctns_format(['blue', symbols.x]);
        symbols.a_y = colorized.ctns_format(['blue', symbols.y]);
        symbols.a_sx = colorized.ctns_format(['blue', symbols.sx_]);
        symbols.a_sy = colorized.ctns_format(['blue', symbols.sy_]);
        symbols.a_sa = colorized.ctns_format(['black', symbols.sa_]);
        symbols.a_sb = colorized.ctns_format(['black', symbols.sb_]);
        symbols.a_delta_x = colorized.ctns_format(['blue', symbols.delta_x]);
        symbols.a_delta_y = colorized.ctns_format(['blue', symbols.delta_y]);
        
        symbols.eq_ = 'y - %s = %s ( x - %s )'.ctns_format([symbols.y, symbols.m_, symbols.x]).ctns_equation();

        symbols.q_eq = colorized.ctns_format(['transparent', symbols.eq_]);
        symbols.a_eq = colorized.ctns_format(['blue', symbols.eq_]);

        /* Build the QUESTION */
        q.push('
Given the line graph,<br/>state the Point-Slope Form of the line.

<br/><br/><button class="ctns-button ctns-toggle-answer">Show Answer</button>
<button class="ctns-button ctns-toggle-hint">Hint</button>
<div class="ctns-hint ctns-hide">
Select two points, $$(x_1,y_1)$$ and $$(x_2,y_2)$$, in the graph, and then calculate the slope of the line
using these two points with the slope formula,
$| \textrm{slope} = m = \frac{y_2-y_1}{x_2-x_1}.|$
Next, choose one of the two selected points, e.g., $$(x_1, y_1)$$, and then simply state the point-slope
form using this chosen point and the calculated slope $$m$$, 
$|y - y_1 = m (x - x_1).|$
<hr style="width:50%;clear:both;margin:2em auto;">
$$(x_1,y_1) = (${q_sx},${q_sy})$$<br/>
$$(x_2,y_2) = (${q_sa},${q_sb})$$<br/><br/>
$$m = \frac{y_2-y_1}{x_2-x_1} = \boxed{ \frac{ (${q_sb})-(${q_sy}) }{ (${q_sa})-(${q_sx}) } } = \boxed { \frac{ ${q_delta_y} }{ ${q_delta_x} } } = \boxed { ${q_m} }$$<br/><br/>
$$y - \boxed{ ${q_y} } = \boxed{ ${q_m} }(x - ${q_x})$$<br/><br/>
$$ \boxed{ ${q_eq} } $$
</div>
'); 
    
        /* BTW, the answer-version is derived from the question-version. Do not
         * forget to switch hint hide to hint show
         */
        $('#TMPL_QUESTIONID').html(tex({'symbols':symbols}, q.join(' ')));
        $('#TMPL_ANSWERID').html(tex({'symbols':symbols}, q.join(' ').replace(/q_/g,'a_').replace(/ctns-hint ctns-hide/,'ctns-hint ctns-show')));
        
        if (typeof window['TMPL_GRAPHICID_Q'] !== 'undefined' && typeof window['TMPL_GRAPHICID_Q'].board !== 'undefined' ) {
            window['TMPL_GRAPHICID_Q'].board.update();
        }
        if (typeof window['TMPL_GRAPHICID_A'] !== 'undefined' && typeof window['TMPL_GRAPHICID_A'].board !== 'undefined' ) {
            window['TMPL_GRAPHICID_A'].board.update();
        }
    [/ctns_script]
    
    [ctns_shortcode]
[graph name='TMPL_GRAPHICID_Q' script='TMPL_SCRIPTID' yaxislabel='f(x)' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='p_'  coordinates='( function() { return st.x;}, function() { return st.y;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']
[point id='q_'  coordinates='( function() { return st.a;}, function() { return st.b;} )' labeloffsetx='0' labeloffsety='0' showpoint='false' showlabel='false' showcoordinates='false' animate='false']
[segment start='p_' end='q_' color='black' style='solid' showline='true']
[/graph]
[graph name='TMPL_GRAPHICID_A' script='TMPL_SCRIPTID' yaxislabel='f(x)' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='p_'  coordinates='( function() { return st.x;}, function() { return st.y;} )' labeloffsetx='0' labeloffsety='0' showpoint='true' showlabel='false' showcoordinates='true' animate='false']
[point id='q_'  coordinates='( function() { return st.a;}, function() { return st.b;} )' labeloffsetx='0' labeloffsety='0' showpoint='true' showlabel='false' showcoordinates='true' animate='false']
[segment start='p_' end='q_' color='black' style='solid' showline='true']
[/graph]
    [/ctns_shortcode]
    
    [ctns_element type='build_a_graph' tag="Q" height='300' width='300'][/ctns_element]
    [ctns_element type='build_a_graph' tag="A" height='300' width='300'][/ctns_element]
[/ctns_make]

