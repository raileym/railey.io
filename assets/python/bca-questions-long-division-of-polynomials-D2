[ctns_make id='synth-divisionD2-3a']

    [ctns_script]
    var i = 0,
        divisor_degree,
        dividend_degree;
    
    divisor_degree = [1, 2].ctns_rand();
    dividend_degree = divisor_degree + [1, 2].ctns_rand();

    gsymbols.dividend_raw = [ [1, 2, 4].ctns_rand() ];
    while ( is_lt(i++, dividend_degree) ) {
        gsymbols.dividend_raw.push( [-4, -2, -1, 1, 2, 4].ctns_rand() );
    }
    
    i=0;
    gsymbols.divisor_raw = [ [1, 2, 4].ctns_rand() ];
    while ( is_lt(i++, divisor_degree) ) {
        gsymbols.divisor_raw.push( [-4, -2, -1, 1, 2, 4].ctns_rand() );
    }

    /*
    gsymbols.dividend_raw = [ 4, -4, 4, 1];
    gsymbols.divisor_raw = [2, 2];
    */
    [/ctns_script]
    
[/ctns_make]


[ctns_make id='synth-divisionD2-3b']

    [ctns_question]
TMPL_QUESTIONBLOCK
    [/ctns_question]
    
    [ctns_script]
    gsymbols.tab = tables.synthDiv({
            css:"ctns-synth-division",
            style: "margin-top:3em;margin-bottom:3em;",
            title:"original problem", 
            useSteps:true, 
            steps:0, 
            dividend:gsymbols.dividend_raw, 
            divisor:gsymbols.divisor_raw});
                
    gsymbols.problem = "\frac{%s}{%s}".ctns_format([
        gsymbols.tab.dividend.join("+").ctns_equation(), 
        gsymbols.tab.divisor.join("+").ctns_equation()]);
        
    gsymbols.dividend = gsymbols.tab.dividend.join("+").ctns_equation();
    gsymbols.divisor = gsymbols.tab.divisor.join("+").ctns_equation();

    gsymbols.dividendDegree = gsymbols.tab.dividend.length - 1;
    gsymbols.divisorDegree = gsymbols.tab.divisor.length - 1;
    
    gsymbols.dividendHighestDegree = gsymbols.tab.dividend[0];
    gsymbols.divisorHighestDegree = gsymbols.tab.divisor[0];

    q.push('
Consider a rational function

$| f(x) = ${problem} |$

where the degree of the dividend ($$ \small ${dividendDegree} $$) is greater than or equal to 
the degree of the divisor ($$ \small ${divisorDegree} $$).
');

    q.push('
<hr>
The function $$f$$ can be reduced because the degree of the
dividend is greater than or equal to the degree of the divisor, 
$| \small ${dividendDegree} &gt; \small ${divisorDegree}. |$
');

    q.push('
<hr>
');

    $(qblock).html(tex({'symbols':gsymbols}, q.join(' ')));
    [/ctns_script]
    
    [ctns_element type='build_a_graph' height='300' width='300'][/ctns_element]
[/ctns_make]


[ctns_make id='synth-divisionD2-3c']

    [ctns_question]
TMPL_QUESTIONBLOCK
    [/ctns_question]
    
    [ctns_script]
    q.push('
Begin reducing the function $$f$$ by writing the dividend and the divisor,
$| ${problem}, |$
into long-division form, as shown below.
');

    /*q.push('<br><br><em style="color:red">'+gsymbols.tab.title+'</em>');*/

    q.push(gsymbols.tab.q);

    $(qblock).html(tex({'symbols':gsymbols}, q.join(' ')));
    [/ctns_script]
    
    [ctns_element type='build_a_graph' height='300' width='300'][/ctns_element]
[/ctns_make]




[ctns_make id='synth-divisionD2-3d']

    [ctns_question]
TMPL_QUESTIONBLOCK
    [/ctns_question]
    
    [ctns_script]
    q.push('
<hr>Order the terms from highest to lowest according
to their degrees. If any term has a zero coefficient, then use zero as
a placeholder for that term.
');

    $(qblock).html(tex({'symbols':gsymbols}, q.join(' ')));
    [/ctns_script]
    
    [ctns_element type='build_a_graph' height='300' width='300'][/ctns_element]
[/ctns_make]



[ctns_make id='synth-divisionD2-3e']

    [ctns_question]
TMPL_QUESTIONBLOCK
    [/ctns_question]
    
    [ctns_script]
    gsymbols.tab = tables.synthDiv({
            css:"ctns-synth-division",
            style: "margin-top:2em;",
            title:"step 1", 
            useSteps:true, 
            steps:1, 
            dividend:gsymbols.dividend_raw, 
            divisor:gsymbols.divisor_raw});
    
    gsymbols.problem = "\frac{%s}{%s}".ctns_format([
        gsymbols.tab.dividend.join("+").ctns_equation(), 
        gsymbols.tab.divisor.join("+").ctns_equation()]);
        
    gsymbols.leadDividend = gsymbols.tab.dividend[0];
    gsymbols.leadDivisor = gsymbols.tab.divisor[0];
    gsymbols.leadQuotient = gsymbols.tab.quotient[0];
    
    q.push('
<hr>
<strong>(Step 1)</strong> Divide the leading term of the dividend by
the leading term of the divisor, 

$| \frac{ ${leadDividend} }{${leadDivisor} } = \color{red}{${leadQuotient}}\color{black}{.} |$

Place this quotient into its quotient position in the long-division form, as shown below. 
');

    /*q.push('<br><br><em style="color:red">'+gsymbols.tab.title+'</em>');*/

    q.push(gsymbols.tab.q);

    q.push('
<hr>
Be sure to line up terms with like-degrees in the quotient.
');

    q.push('
<hr>
');

    gsymbols.tab = tables.synthDiv({
            css:"ctns-synth-division",
            style: "margin-top:2em;",
            title:"step 2", 
            useSteps:true, 
            steps:2, 
            dividend:gsymbols.dividend_raw, 
            divisor:gsymbols.divisor_raw});
    
    gsymbols.divisor = gsymbols.tab.divisor.join("+").ctns_equation();
    gsymbols.leadQuotient = gsymbols.tab.quotient[0];
    gsymbols.subtrahend = gsymbols.tab.subtrahend.join("+").ctns_equation();

    q.push('
<strong>(Step 2)</strong> Multiply 
this quotient term by the divisor to obtain the product,
$| \small {(${leadQuotient}) \cdot (${divisor}) = \color{red}{${subtrahend}} }, |$
');

    q.push('
and then place this product into the long division form below the dividend, 
as shown below. 
');

    gsymbols.tab = tables.synthDiv({
            css:"ctns-synth-division",
            style: "margin-top:2em;",
            title:"step 2", 
            useSteps:true, 
            steps:2, 
            dividend:gsymbols.dividend_raw, 
            divisor:gsymbols.divisor_raw});
    
    /*q.push('<br><br><em style="color:red">'+gsymbols.tab.title+'</em>');*/

    q.push(gsymbols.tab.q);

    q.push('
<hr>
Again, be sure to line up terms with like-degrees in the quotient.
');

    q.push('
<hr>
');

    gsymbols.tab = tables.synthDiv({
            css:"ctns-synth-division",
            style: "margin-top:2em;",
            title:"step 3", 
            useSteps:true, 
            steps:3, 
            dividend:gsymbols.dividend_raw, 
            divisor:gsymbols.divisor_raw});
    
    gsymbols.remainder = gsymbols.tab.remainder.join("+").ctns_equation();

    q.push('
<strong>(Step 3)</strong> Subtract the product (subtrahend) from the dividend (minuend) to
get the remainder (difference),
$| \color{red}{${remainder}}\color{black}{.}|$
See the long-division form below.
');

    /*q.push('<br><br><em style="color:red">'+gsymbols.tab.title+'</em>');*/

    q.push(gsymbols.tab.q);

    q.push('
The remainder is the NEW dividend. 

<hr>
Repeat Step 1 through Step 3 until
the degree of the leading term of the dividend is less than the degree of
the leading term of the divisor.
');

    q.push('
<hr>
');

    q.push('
Repeating Steps 1 through 3 yields the final long-division form below.
');

    gsymbols.tab = tables.synthDiv({
            css:"ctns-synth-division",
            style: "margin-top:2em;",
            title:"All steps", 
            useSteps:false, 
            dividend:gsymbols.dividend_raw, 
            divisor:gsymbols.divisor_raw});
    
    /*q.push('<br><br><em style="color:red">'+gsymbols.tab.title+'</em>');*/

    q.push(gsymbols.tab.q);

    gsymbols.quotient = gsymbols.tab.quotient.join("+").ctns_equation();

    gsymbols.reduced_remainder = gsymbols.tab.reduced_remainder;

    gsymbols.reduced = gsymbols.tab.reduced;
    
    if (gsymbols.tab.is_remainder === "true") {

        q.push('
<hr>
Because there is a final remainder in this example, the
reduced equation equals the quotient,
$| ${quotient}, |$
plus the remainder
divided by the dividend,
$| ${reduced_remainder}, |$
which yields the final the result,
$| ${reduced}. |$
');

    } else {

        q.push('
<hr>
Because there is no final remainder in this example, the
reduced equation is simply the quotient, 
$| ${reduced}. |$
');

    }
    
    $(qblock).html(tex({'symbols':gsymbols}, q.join(' ')));
    [/ctns_script]
    
    [ctns_element type='build_a_graph' height='300' width='300'][/ctns_element]
[/ctns_make]





[ctns no_buttons no_divide select_control="L" no_reference css="text-align:left;font-family:'Helvetica neue';font-weight:normal;font-size:160%;color:rgb(77,77,77);"]
synth-divisionD2-3a,
synth-divisionD2-3b,
synth-divisionD2-3c,
synth-divisionD2-3d,
synth-divisionD2-3e
[/ctns]
