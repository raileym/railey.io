[ctns_make id='rational-functionD4-1']

    [ctns_description]
A simple rational function that demonstrates one 
vertical asymptote along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var i,
            dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 1;
        dividendDegree = 0;

        symbols.dividend = [1];
        symbols.zeros = [];
        while ( is_lt(i++, dividendDegree) ) {
            var zero = [3, 2, 1].ctns_rand();
            symbols.zeros.push(zero);
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        }

        i=0;
        symbols.divisor = [];
        symbols.asymptotes = [];
        while ( is_lt(i++, divisorDegree) ) {
            var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            symbols.asymptotes.push(asymptote);
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        }

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote = symbols.asymptotes[0];
        
        q.push("
Consider a simple rational function $$f$$ with
one linear factor in its denominator
$| f(x) = ${problem}. |$
The function $$f$$ has
one vertical asymptote in its graph.
<hr>
To find the vertical asymptote,
set $$f$$'s denominator to zero, 
$| ${denominator} = 0, |$
and solve for $$x.$$ 
Here, the answer is simple: 
the vertical asymptote occurs at
$$x = ${asymptote}.$$
        ");
    
        q.push('
<hr>
A graph of $$f$$ shows its curve
together with its vertical asymptote at $$x = ${asymptote}.$$
<br><br>
        ');

        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a' coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='T' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='B' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='T' end='B' style='dashed' color='red']
[function color='black' variable='x' constants='a' min='-6' max='6']1/(x - a.x)[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns_make id='rational-functionD4-2']

    [ctns_description]
A simple rational function that demonstrates two 
vertical asymptotes along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 2;
        dividendDegree = 0;

        symbols.zeros = [];
        for ( var i=0; is_lt(i, dividendDegree); i++ ) {
        
            do {
                var zero = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.zeros.includes(zero) );
            
            symbols.zeros.push( zero );
            
        }

        symbols.asymptotes = [];
        for ( var i=0; is_lt(i, divisorDegree); i++ ) {
        
            do {
                var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.asymptotes.includes(asymptote) );
            
            symbols.asymptotes.push( asymptote );
            
        }

        symbols.zeros.sort();
        symbols.asymptotes.sort();
        
        /* Beautify the handling of a single x */
        if ( symbols.asymptotes.includes(0) ) {
            symbols.asymptotes.ctns_remove(0);
            symbols.asymptotes.unshift(0);
        }
        
        symbols.dividend = [1];
        symbols.zeros.forEach(function(zero, idx) {
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        });
        
        symbols.divisor = [];
        symbols.asymptotes.forEach(function(asymptote, idx) {
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        });

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote1 = symbols.asymptotes[0];
        symbols.asymptote2 = symbols.asymptotes[1];
        
        q.push("
Consider a simple rational function $$f$$ with
two linear factors in its denominator
$| f(x) = ${problem}. |$
The function $$f$$ has two vertical asymptotes in its graph.
<hr>
To find the two vertical asymptotes, 
set $$f$$'s denominator to zero, 
$| ${denominator} = 0, |$
and solve for $$x.$$ 
Here, the answer is simple: 
there is one vertical asymptote
at $$x = ${asymptote1}$$, and another at
$$x = ${asymptote2}.$$ 
        ");
    
        q.push("
<hr>
A graph of $$f$$ shows its curve
together with it's two vertical asymptotes, one each at 
$$x = ${asymptote1}$$ and
$$x = ${asymptote2}.$$
<br><br>
        ");

        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a'  coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aT' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aB' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='aT' end='aB' style='dashed' color='red']

[point id='b'  coordinates='( function() { return st.getAsymptote(1);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bT' coordinates='( function() { return st.getAsymptote(1);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bB' coordinates='( function() { return st.getAsymptote(1);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bT' end='bB' style='dashed' color='red']

[function color='black' variable='x' constants='a,b' min='-6' max='6']1/((x-a.x)*(x-b.x))[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns_make id='rational-functionD4-3']

    [ctns_description]
A simple rational function that demonstrates two 
vertical asymptotes along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 2;
        dividendDegree = 0;

        symbols.zeros = [];
        for ( var i=0; is_lt(i, dividendDegree); i++ ) {
        
            do {
                var zero = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.zeros.includes(zero) );
            
            symbols.zeros.push( zero );
            
        }

        symbols.asymptotes = [];
        for ( var i=0; is_lt(i, divisorDegree); i++ ) {
        
            do {
                var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.asymptotes.includes(asymptote) );
            
            symbols.asymptotes.push( asymptote );
            
        }

        symbols.zeros.sort();
        symbols.asymptotes.sort();
        
        /* Beautify the handling of a single x */
        if ( symbols.asymptotes.includes(0) ) {
            symbols.asymptotes.ctns_remove(0);
            symbols.asymptotes.unshift(0);
        }
        
        symbols.dividend = [1];
        symbols.zeros.forEach(function(zero, idx) {
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        });
        
        symbols.divisor = [];
        symbols.asymptotes.forEach(function(asymptote, idx) {
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        });

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote1 = symbols.asymptotes[0];
        symbols.asymptote2 = symbols.asymptotes[1];
        
        q.push('
The graph of the function
$| f(x) = ${problem} |$
shows $$f$$ has two vertical asymptotes, one each at $$x = ${asymptote1}$$
and $$x = ${asymptote2}$$.
<br><br>
        ');
    
        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a'  coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aT' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aB' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='aT' end='aB' style='dashed' color='red']

[point id='b'  coordinates='( function() { return st.getAsymptote(1);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bT' coordinates='( function() { return st.getAsymptote(1);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bB' coordinates='( function() { return st.getAsymptote(1);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bT' end='bB' style='dashed' color='red']

[function color='black' variable='x' constants='a,b' min='-6' max='6']1/((x-a.x)*(x-b.x))[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns_make id='rational-functionD4-4']

    [ctns_description]
A simple rational function that demonstrates one 
vertical asymptote along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 1;
        dividendDegree = 0;

        symbols.zeros = [];
        for ( var i=0; is_lt(i, dividendDegree); i++ ) {
        
            do {
                var zero = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.zeros.includes(zero) );
            
            symbols.zeros.push( zero );
            
        }

        symbols.asymptotes = [];
        for ( var i=0; is_lt(i, divisorDegree); i++ ) {
        
            do {
                var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.asymptotes.includes(asymptote) );
            
            symbols.asymptotes.push( asymptote );
            
        }

        symbols.zeros.sort();
        symbols.asymptotes.sort();
        
        /* Beautify the handling of a single x */
        if ( symbols.asymptotes.includes(0) ) {
            symbols.asymptotes.ctns_remove(0);
            symbols.asymptotes.unshift(0);
        }
        
        symbols.dividend = [1];
        symbols.zeros.forEach(function(zero, idx) {
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        });
        
        symbols.divisor = [];
        symbols.asymptotes.forEach(function(asymptote, idx) {
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        });

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote1 = symbols.asymptotes[0];
        
        q.push('
The graph of the function $$f,$$
$| f(x) = ${problem} ,|$
shows $$f$$ has one vertical asymptote 
at $$x = ${asymptote1},$$ where its denominator equals zero.
<br><br>
        ');
    
        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a'  coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aT' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aB' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='aT' end='aB' style='dashed' color='red']

[function color='black' variable='x' constants='a' min='-6' max='6']1/(x-a.x)[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns_make id='rational-functionD4-5']

    [ctns_description]
A simple rational function that demonstrates one 
vertical asymptote along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 1;
        dividendDegree = 0;

        symbols.zeros = [];
        for ( var i=0; is_lt(i, dividendDegree); i++ ) {
        
            do {
                var zero = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.zeros.includes(zero) );
            
            symbols.zeros.push( zero );
            
        }

        symbols.asymptotes = [];
        for ( var i=0; is_lt(i, divisorDegree); i++ ) {
        
            do {
                var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.asymptotes.includes(asymptote) );
            
            symbols.asymptotes.push( asymptote );
            
        }

        symbols.zeros.sort();
        symbols.asymptotes.sort();
        
        /* Beautify the handling of a single x */
        if ( symbols.asymptotes.includes(0) ) {
            symbols.asymptotes.ctns_remove(0);
            symbols.asymptotes.unshift(0);
        }
        
        symbols.dividend = [1];
        symbols.zeros.forEach(function(zero, idx) {
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        });
        
        symbols.divisor = [];
        symbols.asymptotes.forEach(function(asymptote, idx) {
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        });

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote1 = symbols.asymptotes[0];
        
        q.push('
Consider a rational function $$f$$
with one linear factor in its denominator
$| f(x) = ${problem}.|$
The graph of the function $$f$$ shows it has one vertical asymptote 
at $$x = ${asymptote1},$$ where its denominator equals zero.
<br><br>
        ');
    
        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a'  coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aT' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aB' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='aT' end='aB' style='dashed' color='red']

[function color='black' variable='x' constants='a' min='-6' max='6']1/(x-a.x)[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns_make id='rational-functionD4-5a']

    [ctns_description]
A simple rational function that demonstrates one 
vertical asymptote along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 1;
        dividendDegree = 0;

        symbols.zeros = [];
        for ( var i=0; is_lt(i, dividendDegree); i++ ) {
        
            do {
                var zero = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.zeros.includes(zero) );
            
            symbols.zeros.push( zero );
            
        }

        symbols.asymptotes = [];
        for ( var i=0; is_lt(i, divisorDegree); i++ ) {
        
            do {
                var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.asymptotes.includes(asymptote) );
            
            symbols.asymptotes.push( asymptote );
            
        }

        symbols.zeros.sort();
        symbols.asymptotes.sort();
        
        /* Beautify the handling of a single x */
        if ( symbols.asymptotes.includes(0) ) {
            symbols.asymptotes.ctns_remove(0);
            symbols.asymptotes.unshift(0);
        }
        
        symbols.dividend = [1];
        symbols.zeros.forEach(function(zero, idx) {
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        });
        
        symbols.divisor = [];
        symbols.asymptotes.forEach(function(asymptote, idx) {
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        });

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote1 = symbols.asymptotes[0];
        
        q.push('
For example, consider a rational function $$f$$
with one linear factor in its denominator
$| f(x) = ${problem}.|$
The graph of the function $$f$$ shows it has one vertical asymptote 
at $$x = ${asymptote1},$$ where its denominator equals zero.
<br><br>
        ');
    
        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a'  coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aT' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aB' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='aT' end='aB' style='dashed' color='red']

[function color='black' variable='x' constants='a' min='-6' max='6']1/(x-a.x)[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns_make id='rational-functionD4-6']

    [ctns_description]
A simple rational function that demonstrates two 
vertical asymptotes along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 2;
        dividendDegree = 0;

        symbols.zeros = [];
        for ( var i=0; is_lt(i, dividendDegree); i++ ) {
        
            do {
                var zero = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.zeros.includes(zero) );
            
            symbols.zeros.push( zero );
            
        }

        symbols.asymptotes = [];
        for ( var i=0; is_lt(i, divisorDegree); i++ ) {
        
            do {
                var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.asymptotes.includes(asymptote) );
            
            symbols.asymptotes.push( asymptote );
            
        }

        symbols.zeros.sort();
        symbols.asymptotes.sort();
        
        /* Beautify the handling of a single x */
        if ( symbols.asymptotes.includes(0) ) {
            symbols.asymptotes.ctns_remove(0);
            symbols.asymptotes.unshift(0);
        }
        
        symbols.dividend = [1];
        symbols.zeros.forEach(function(zero, idx) {
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        });
        
        symbols.divisor = [];
        symbols.asymptotes.forEach(function(asymptote, idx) {
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        });

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote1 = symbols.asymptotes[0];
        symbols.asymptote2 = symbols.asymptotes[1];
        
        q.push('
Consider a rational function $$f$$
with two linear factors in its denominator
$| f(x) = ${problem}.|$
The graph of the function $$f$$ shows it has two vertical asymptotes, 
one each  
at $$x = ${asymptote1}$$ and $$x = ${asymptote2},$$ where its denominator equals zero.
<br><br>
        ');
    
        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a'  coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aT' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aB' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='aT' end='aB' style='dashed' color='red']

[point id='b'  coordinates='( function() { return st.getAsymptote(1);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bT' coordinates='( function() { return st.getAsymptote(1);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bB' coordinates='( function() { return st.getAsymptote(1);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bT' end='bB' style='dashed' color='red']

[function color='black' variable='x' constants='a,b' min='-6' max='6']1/((x-a.x)*(x-b.x))[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns_make id='rational-functionD4-6a']

    [ctns_description]
A simple rational function that demonstrates two 
vertical asymptotes along with its full graph.
    [/ctns_description]
    
    [ctns_script]
        var dividendDegree,
            divisorDegree,
            isReducible,
            divisor = [],
            dividend = [];

        divisorDegree = 2;
        dividendDegree = 0;

        symbols.zeros = [];
        for ( var i=0; is_lt(i, dividendDegree); i++ ) {
        
            do {
                var zero = [4, 3, 2, 1, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.zeros.includes(zero) );
            
            symbols.zeros.push( zero );
            
        }

        symbols.asymptotes = [];
        for ( var i=0; is_lt(i, divisorDegree); i++ ) {
        
            do {
                var asymptote = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
            } while ( symbols.asymptotes.includes(asymptote) );
            
            symbols.asymptotes.push( asymptote );
            
        }

        symbols.zeros.sort();
        symbols.asymptotes.sort();
        
        /* Beautify the handling of a single x */
        if ( symbols.asymptotes.includes(0) ) {
            symbols.asymptotes.ctns_remove(0);
            symbols.asymptotes.unshift(0);
        }
        
        symbols.dividend = [1];
        symbols.zeros.forEach(function(zero, idx) {
            if ( is_zero(zero) ) {
                symbols.dividend.push("x");
            } else if ( 1 === dividendDegree) {
                symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
            } else {
                symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
            }
        });
        
        symbols.divisor = [];
        symbols.asymptotes.forEach(function(asymptote, idx) {
            if ( is_zero(asymptote) ) {
                symbols.divisor.push("x");
            } else if ( 1 === divisorDegree) {
                symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
            } else {
                symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
            }
        });

        if ("undefined" === typeof symbols.getZero) {
            symbols.getZero = (function(symbols) {
                return function(idx) {
                    return symbols.zeros[idx];
                };
            })(symbols);
        }

        if ("undefined" === typeof symbols.getAsymptote) {
            symbols.getAsymptote = (function(symbols) {
                return function(idx) {
                    return symbols.asymptotes[idx];
                };
            })(symbols);
        }
  
        symbols.numerator = symbols.dividend.join("");
        symbols.denominator = symbols.divisor.join("");

        symbols.problem = "\frac{%s}{%s}".ctns_format([
            symbols.dividend.join(""), 
            symbols.divisor.join("")]);

        /*
        symbols.numerator = math.rationalize( symbols.dividend.join("*") ).toTex();
        symbols.denominator = math.rationalize( symbols.divisor.join("*") ).toTex();
            
        symbols.numerator = symbols.numerator.replace(/\cdot/g, "");
        symbols.denominator = symbols.denominator.replace(/\cdot/g, "");

        symbols.problem2 = "\frac{%s}{%s}".ctns_format([
            symbols.numerator, 
            symbols.denominator]);
        */
        
        symbols.asymptote1 = symbols.asymptotes[0];
        symbols.asymptote2 = symbols.asymptotes[1];
        
        q.push('
For example, consider a rational function $$f$$
with two linear factors in its denominator
$| f(x) = ${problem}.|$
The graph of the function $$f$$ shows it has two vertical asymptotes, 
one each  
at $$x = ${asymptote1}$$ and $$x = ${asymptote2},$$ where its denominator equals
zero.
<br><br>
        ');
    
        q.push( graphicblock( {"dim":"6", "gid":grblock}) );

        $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
            
        tml_MASTERID_SLIDENO(CTNS.NUMBERS, CTNS.NUMBERS.GID);

        [grblock].forEach(function(e) {
            if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
                window[e].board.update();
            }
        });
    [/ctns_script]
    
    [ctns_shortcode]
[graph height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a'  coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aT' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='aB' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='aT' end='aB' style='dashed' color='red']

[point id='b'  coordinates='( function() { return st.getAsymptote(1);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bT' coordinates='( function() { return st.getAsymptote(1);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='bB' coordinates='( function() { return st.getAsymptote(1);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='bT' end='bB' style='dashed' color='red']

[function color='black' variable='x' constants='a,b' min='-6' max='6']1/((x-a.x)*(x-b.x))[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]

[ctns text select_control="L"]
rational-functionD4-1
[/ctns]

[ctns text select_control="L"]
rational-functionD4-2
[/ctns]

[ctns text select_control="L"]
rational-functionD4-3
[/ctns]

[ctns text select_control="L"]
rational-functionD4-4
[/ctns]

[ctns text select_control="L"]
rational-functionD4-5
[/ctns]

[ctns text select_control="L"]
rational-functionD4-5a
[/ctns]

[ctns text select_control="L"]
rational-functionD4-6
[/ctns]

[ctns text select_control="L"]
rational-functionD4-6a
[/ctns]
