[ctns_make id='rational-functionD5-1' flush]

    [ctns_description]
A simple rational function that demonstrates a single 
vertical asymptote and a single zero along with its full graph, 
not to include a hole.
    [/ctns_description]
    
    [ctns_script]
    var i,
        dividendDegree,
        divisorDegree,
        isReducible,
        divisor = [],
        dividend = [];

    divisorDegree = 1;
    dividendDegree = 1;

    symbols.zeros = [];
    for ( var i=0; is_lt(i, dividendDegree); i++ ) {
    
        do {
            var zero = [4, 3, 2, 1, 0, -1, -2, -3, -4].ctns_rand();
        } while ( symbols.zeros.includes(zero) );
        
        symbols.zeros.push( zero );
        
    }

    /* No holes, thank you */
    symbols.asymptotes = [];
    for ( var i=0; is_lt(i, divisorDegree); i++ ) {
    
        do {
            var asymptote = [3, 2, 1, 0, -1, -2, -3].ctns_rand();
        } while ( symbols.zeros.includes(asymptote) || symbols.asymptotes.includes(asymptote) );
        
        symbols.asymptotes.push( asymptote );
        
    }

    symbols.zeros.sort();
    symbols.asymptotes.sort();
    
    /* Beautify the handling of a single x */
    if ( symbols.asymptotes.includes(0) ) {
        symbols.asymptotes.ctns_remove(0);
        symbols.asymptotes.unshift(0);
    }
    
    symbols.dividend = [];
    symbols.zeros.forEach(function(zero, idx) {
        if ( is_zero(zero) ) {
            symbols.dividend.push("x");
        } else if ( 1 === dividendDegree) {
            symbols.dividend.push( "x - %s".ctns_format([ zero ]).ctns_equation() );
        } else {
            symbols.dividend.push( "(%s)".ctns_format([ "x - %s".ctns_format([ zero ]).ctns_equation() ]) );
        }
    });
    
    symbols.divisor = [];
    symbols.asymptotes.forEach(function(asymptote, idx) {
        if ( is_zero(asymptote) ) {
            symbols.divisor.push("x");
        } else if ( 1 === divisorDegree) {
            symbols.divisor.push( "x - %s".ctns_format([ asymptote ]).ctns_equation() );
        } else {
            symbols.divisor.push( "(%s)".ctns_format([ "x - %s".ctns_format([ asymptote ]).ctns_equation() ]) );
        }
    });

    if ("undefined" === typeof symbols.getZero) {
        symbols.getZero = (function(symbols) {
            return function(idx) {
                return symbols.zeros[idx];
            };
        })(symbols);
    }

    if ("undefined" === typeof symbols.getAsymptote) {
        symbols.getAsymptote = (function(symbols) {
            return function(idx) {
                return symbols.asymptotes[idx];
            };
        })(symbols);
    }

    symbols.numerator = symbols.dividend.join("");
    symbols.denominator = symbols.divisor.join("");

    symbols.problem = "\frac{%s}{%s}".ctns_format([
        symbols.dividend.join(""), 
        symbols.divisor.join("")]);

    symbols.zero = symbols.zeros[0];
    symbols.asymptote = symbols.asymptotes[0];
    
    q.push('
Consider a rational function $$f$$ with
one linear factor in its numerator, and
a different linear factor in its denominator,
$| f(x) = ${problem}. |$
What makes the function $$f$$ interesting is where
both its numerator and denominator equal zero.
<hr>
    ');

    q.push('
To find where the denominator of $$f$$ goes to zero,
set the denominator to zero, 
$| ${denominator} = 0, |$
and then solve for the value
of $$x$$ that satisfies this equation. 
Here, the answer is simple: 
$$x = ${asymptote}$$ satisfies the equation.
<hr>
    ');

    q.push('
Similarly, to find where the numerator of $$f$$ goes to zero,
set the numerator to zero, 
$| ${numerator} = 0, |$
and then solve for the value
of $$x$$ that satisfies this equation. 
Again, the answer is simple: 
$$x = ${zero}$$ satisfies
the equation.
<hr>
    ');

    q.push("
As shown below, a partial graph of $$f$$ 
shows a vertical asymptote at each zero
of $$f$$'s denominator, at $$x = ${asymptote}$$ 
in this case.
At the same time, the graph shows a point corresponding 
to the single zero from
the numerator, at
$$x = ${zero}$$.
<br><br>
    ");

    q.push( graphicblock( {"dim":"6", "gid":grblock_A}) );

    q.push('
<hr>
A complete graph of $$f$$ shows the curve
together with the vertical asymptote.
<br><br>
    ');

    q.push( graphicblock( {"dim":"6", "gid":grblock_B}) );

    $(qblock).html(tex({"symbols":symbols}, q.join(' ')));
        
    grblock_A_f(NUMBERS);
    grblock_B_f(NUMBERS);

    [grblock_A, 
     grblock_B].forEach(function(e) {
        if (typeof window[e] !== "undefined" && typeof window[e].board !== "undefined" ) {
            window[e].board.update();
        }
    });
    [/ctns_script]
    
    [ctns_shortcode]
[graph tag='A' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6']
[point id='a' coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='T' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='B' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='T' end='B' style='dashed' color='red']

[point id='z' coordinates='( function() { return st.getZero(0); }, function() { return  0;} )' showpoint='true' showlabel='false' showcoordinates='false' animate='false']	 	 
[/graph]	 	 

[graph tag='B' height='300' width='300' yaxislabel_ycoord='9.5' xaxislabel_xcoord='8.75' boundingbox='-6,6,6,-6' showzoom='true']
[point id='a' coordinates='( function() { return st.getAsymptote(0);}, function() { return  0;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='T' coordinates='( function() { return st.getAsymptote(0);}, function() { return  6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[point id='B' coordinates='( function() { return st.getAsymptote(0);}, function() { return -6;} )' showpoint='false' showlabel='false' showcoordinates='false' animate='false']	 	 
[segment start='T' end='B' style='dashed' color='red']

[point id='z' coordinates='( function() { return st.getZero(0);}, function() { return  0;} )' showpoint='true' showlabel='false' showcoordinates='false' animate='false']	 	 

[function color='black' variable='x' constants='a,z' min='-18' max='18'](x-z.x)/(x-a.x)[/function]	 	 
[/graph]	 	 
    [/ctns_shortcode]

[/ctns_make]
